#
# File: firewall.dmz
#
# Description: exclude destination ports in section 'dmz', 'rule' and 'redirect' from being
#   NATed, when 'dmz' is active.
#
# Usage: run by fw3 when started, see file /etc/config/firewall and a section 'include'.
#


# include functions (config_get, config_foreach).
source /lib/functions.sh



# find each section destination port.
# return the port in variable ports.
port_from_section() {
    local dest_port

    # get option 'dest_port'.
    config_get dest_port $1 dest_port

    # check that we actually have a port.
    if [ $((${dest_port})) -gt 0 ]; then
	#echo "rule dest_port: ${dest_port}"
	ports="${ports} ${dest_port}"
	##logger -t dmz_iptables_rules "dest_port: ${dest_port}"
    fi
}



# loop through each section of 'dmz', 'rule' and 'redirect' in file /etc/config/firewall.
exclude_ports_sections_dmz_rule_redirect() {
    local dmzhost
    local ports            # tmp port variable.
    local excl_ports       # ports explicitly marked as to be excluded.
    local first            # flag to keep track of first pass in for loop.
    local rule_ports       # ports from 'rule' to be excluded.
    local redirect_ports   # ports from 'redirect' to be excluded.

    dmzhost=$(uci -q get firewall.dmz.host)


    # extract ports explicitly excluded in 'dmz' from NAT.
    ports=$(uci -q get firewall.dmz.exclude_ports)

    # loop through the ports, add ',' between ports.
    first=1
    for port in ${ports}; do
	if [ ${first} -eq 1 ]; then
	    excl_ports="${port}"
	else
	    excl_ports="${excl_ports},${port}"
	fi
	first=0
    done


    # read the firewall configuration file.
    config_load firewall


    # extract ports from section 'rule' that will be excluded from NAT.
    # loop through every section 'rule', ports kept in variable "ports".
    ports=""
    config_foreach port_from_section rule

    # replace space between ports with ','.
    rule_ports=${ports}
    if [ -n "${rule_ports}" ]; then
	rule_ports=$(echo ${rule_ports} | sed -e 's/ /,/')
    fi


    # extract ports from section 'redirect' that will be excluded from NAT.
    # loop through every section 'redirect', ports kept in variable "ports".
    ports=""
    config_foreach port_from_section redirect

    # replace space between ports with ','.
    redirect_ports=${ports}
    if [ -n "${redirect_ports}" ]; then
	redirect_ports=$(echo ${redirect_ports} | sed -e 's/ /,/')
    fi


    # catenate ports.
    # adjust for any one of them being empty (is there a more clever solution?).
    ports=""
    if [ -n "${excl_ports}" ]; then
	ports="${excl_ports}"

	if [ -n "${rule_ports}" ]; then
	    ports="${rule_ports},${ports}"
	fi

	if [ -n "${redirect_ports}" ]; then
	    ports="${redirect_ports},${ports}"
	fi
    elif [ -n "${rule_ports}" ]; then
	ports="${rule_ports}"

	if [ -n "${redirect_ports}" ]; then
	    ports="${redirect_ports},${ports}"
	fi
    elif [ -n "${redirect_ports}" ]; then
	ports="${redirect_ports}"
    fi


    # insert the iptables rules imposed by variable "dmzhost" only.
    if [ -n "${dmzhost}" ]; then
	iptables -t filter -I zone_wan_forward -d $dmzhost -m comment --comment DMZ_Host -j ACCEPT
    fi

    # insert iptables rules imposed by variables "excl_ports", "rule_ports" and "redirect_ports.
    if [ -n "${dmzhost}" -a -n "${ports}" ]; then
	iptables -t nat -I zone_wan_prerouting -p udp --match multiport ! --dports ${ports} -m comment --comment DMZ_Host_TCP -j DNAT --to-destination ${dmzhost}
	iptables -t nat -I zone_wan_prerouting -p tcp --match multiport ! --dports ${ports} -m comment --comment DMZ_Host_TCP -j DNAT --to-destination ${dmzhost}
    fi
}


# main program.

# exclude ports from sections 'dmz', 'rule' and 'redirect'.
exclude_ports_sections_dmz_rule_redirect
