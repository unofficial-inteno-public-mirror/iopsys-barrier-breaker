#!/bin/sh

local netcon=0
local tvcon=0
local wanip=0

test_connection() {
	local addr="$1"
	local defroute="$(ip r | grep default | awk '{print$3}')"
	local def6route="$(ip -f inet6 r | grep default | awk '{print$3}')"
	local ping6dev="$(ip -f inet6 r | grep default | awk '{print$5}')"

	if [ -n "$addr" ]; then
		ping -q -w 5 -c 1 $addr >/dev/null 2>&1 && return 0
	elif [ -n "$defroute" ]; then
		ping -q -w 5 -c 1 $defroute >/dev/null 2>&1 && return 0
		for nmsrv in $(grep nameserver /var/resolv.conf.auto | awk '{print$2}'); do
			ping -q -w 5 -c 1 $nmsrv >/dev/null 2>&1 && return 0
		done
	elif [ -n "$def6route" ] && [ -n "$ping6dev" ]; then
		ndisc6 -w 5 -1 $def6route $ping6dev >/dev/null 2>&1 && return 0
	fi
	return 1
}

wan_have_ip() {
    local port=$(uci get -q layer2_interface_ethernet.Wan.ifname)
    local addr=$(ip a show dev $port | grep "inet "| awk '{print $2}')

    if [ -n "$addr" ]
    then
	wanip=1
	ubus call led.wan  set '{"state" : "ok"}'
    fi
    # dont set wan here status is set from hotplug, only set when ip is detected.
}

internet_test() {
	local dest="$(uci get -q system.@system[0].netping_addr)"

	test_connection $dest

	if [ "$?" -eq 0 ]; then
		netcon=1
		ubus call led.internet  set '{"state" : "ok"}'

	else
		ubus call led.internet  set '{"state" : "error"}'
	fi
}

iptvtest() {
	local dest="$(uci get -q system.@system[0].tvping_addr)"

	test_connection $dest

	if [ "$?" -eq 0 ]; then
		tvcon=1
		ubus call led.tv  set '{"state" : "ok"}'
	else
		ubus call led.tv  set '{"state" : "off"}'
	fi
}

for tm in 1 3 5 7
do
	if [[ $netcon -eq 1 && $tvcon -eq 1 && $wanip -eq 1 ]]; then
		break
	else
		[ $wanip -eq 0 ] && wan_have_ip
		[ $netcon -eq 0 ] && internet_test
		[ $tvcon -eq 0 ] && iptvtest

		sleep $tm
	fi
done

if [ $netcon -eq 1 ] && ! pidof wanup >/dev/null; then
	/sbin/wanup &
fi

